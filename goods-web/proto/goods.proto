syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";

service Goods {
    // Demo
    rpc SayHello(HelloRequest) returns (HelloReply) {}

    // Banner
    rpc BannerList(google.protobuf.Empty) returns(BannerListResponse);  // 获取轮播列表信息
    rpc CreateBanner(BannerRequest) returns(BannerResponse);            // 添加banner图
    rpc UpdateBanner(BannerRequest) returns(google.protobuf.Empty);     // 修改轮播图
    rpc DeleteBanner(BannerRequest) returns(google.protobuf.Empty);     // 删除轮播图ß

    // Brand
    rpc BrandList(BrandFilterRequest) returns(BrandListResponse); // 品牌列表
    rpc CreateBrand(BrandRequest) returns(BrandInfoResponse);     // 新建品牌信息
    rpc UpdateBrand(BrandRequest) returns(google.protobuf.Empty); // 修改品牌信息
    rpc DeleteBrand(BrandRequest) returns(google.protobuf.Empty); // 删除品牌

    // Category
    rpc GetAllCategorysList(google.protobuf.Empty) returns(CategoryListResponse); // 获取所有的分类
    rpc GetSubCategory(CategoryListRequest) returns(SubCategoryListResponse);     // 获取子分类
    rpc CreateCategory(CategoryInfoRequest) returns(CategoryInfoResponse);        // 新建分类信息
    rpc UpdateCategory(CategoryInfoRequest) returns(google.protobuf.Empty);       // 修改分类信息
    rpc DeleteCategory(DeleteCategoryRequest) returns(google.protobuf.Empty);     // 删除分类

    // Goods
    rpc GoodsList(GoodsFilterRequest) returns(GoodsListResponse);     // 列表
    // 现在用户提交订单有多个商品，你得批量查询商品的信息吧
    rpc BatchGetGoods(BatchGoodsIdInfo) returns(GoodsListResponse);   // 批量获取商品信息
    rpc GetGoodsDetail(GoodInfoRequest) returns(GoodsInfoResponse);   // 详情
    rpc CreateGoods(CreateGoodsInfo) returns (GoodsInfoResponse);     // 添加
    rpc UpdateGoods(CreateGoodsInfo) returns (google.protobuf.Empty); // 修改
    rpc DeleteGoods(DeleteGoodsInfo) returns (google.protobuf.Empty); // 删除

    // 品牌分类关系
    rpc CategoryBrandList(CategoryBrandFilterRequest) returns(CategoryBrandListResponse); // 列表
    rpc GetCategoryBrandList(CategoryInfoRequest) returns(BrandListResponse);             // 详情
    rpc CreateCategoryBrand(CategoryBrandRequest) returns(CategoryBrandResponse);         // 添加
    rpc UpdateCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty);         // 修改
    rpc DeleteCategoryBrand(CategoryBrandRequest) returns(google.protobuf.Empty);         // 删除
}

/*
+-------------------------------------------------------+
|   Demo                                                |
+-------------------------------------------------------+
*/
message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

/*
+-------------------------------------------------------+
|   Banner                                              |
+-------------------------------------------------------+
*/
// Banner 列表
message BannerListResponse {
  int32 total = 1;
  repeated BannerResponse data = 2;
}

// Banner 详情
message BannerResponse {
    int32 id = 1;
    int32 index = 2;
    string image = 3;
    string url = 4;
}

// 创建 & 编辑 & 删除 Banner
message BannerRequest {
    int32 id = 1;
    int32 index = 2;
    string image = 3;
    string url = 4;
}

/*
+-------------------------------------------------------+
|   Brand                                               |
+-------------------------------------------------------+
*/
// 品牌列表
message BrandListResponse {
    int32 total = 1;
    repeated BrandInfoResponse data = 2;
}

// 品牌详情
message BrandInfoResponse {
    int32 id = 1;
    string name = 2;
    string logo = 3;
}

// 品牌筛选
message BrandFilterRequest {
    int32 pages = 1;
    int32 pagePerNums = 2;
}

// Request 品牌信息
message BrandRequest {
    int32 id = 1;
    string name = 2;
    string logo = 3;
}

/*
+-------------------------------------------------------+
|   Category                                            |
+-------------------------------------------------------+
*/
// 分类列表
message CategoryListResponse {
    int32 total = 1;
    repeated CategoryInfoResponse data = 2;
    string jsonData = 3;
}

// 分类详情
message CategoryInfoResponse {
    int32 id = 1;
    string name = 2;
    int32 parentCategory = 3;
    int32 level = 4;
    bool isTab = 5;
}

// 子分类
message SubCategoryListResponse {
    int32 total = 1;
    CategoryInfoResponse info = 2;
    repeated CategoryInfoResponse subCategorys = 3;
}

// 获取指定分类的子分类
message CategoryListRequest {
    int32 id = 1;
    int32 level = 2;
}

// 新建 & 编辑分类
message CategoryInfoRequest {
    int32 id = 1;
    string name = 2;
    int32 parentCategory = 3;
    int32 level = 4;
    bool isTab = 5;
}

// 删除分类
message DeleteCategoryRequest {
    int32 id = 1;
}

/*
+-------------------------------------------------------+
|   Goods                                               |
+-------------------------------------------------------+
*/
// 商品列表
message GoodsListResponse {
  int32 total = 1;
  repeated GoodsInfoResponse data = 2;
}

// 商品详情
message GoodsInfoResponse {
    int32 id = 1;
    int32 categoryId = 2;
    string name = 3;
    string goodsSn = 4;
    int32 clickNum = 5;
    int32 soldNum = 6;
    int32 favNum = 7;
    float marketPrice = 9;
    float shopPrice = 10;
    string goodsBrief = 11;
    string goodsDesc = 12;
    bool shipFree = 13;
    repeated string images = 14;
    repeated string descImages = 15;
    string goodsFrontImage = 16;
    bool isNew = 17;
    bool isHot = 18;
    bool onSale = 19;
    int64 addTime = 20;
    CategoryBriefInfoResponse category = 21;
    BrandInfoResponse brand = 22;
}

// 商品简介
message CategoryBriefInfoResponse {
    int32 id = 1;
    string name = 2;
}

// 批量获取指定商品
message BatchGoodsIdInfo {
    repeated int32 id = 1;
}

// 删除商品
message DeleteGoodsInfo {
    int32 id = 1;
}

// 获取商品详情
message GoodInfoRequest {
    int32 id = 1;
}

// 创建 & 编辑商品
message CreateGoodsInfo {
    int32 id = 1;
    string name = 2;
    string goodsSn = 3;
    int32 stocks = 7; //库存，
    float marketPrice = 8;
    float shopPrice = 9;
    string goodsBrief = 10;
    string goodsDesc = 11;
    bool shipFree = 12;
    repeated string images = 13;
    repeated string descImages = 14;
    string goodsFrontImage = 15;
    bool isNew = 16;
    bool isHot = 17;
    bool onSale = 18;
    int32 categoryId = 19;
    int32 brandId = 20;
}

// 商品筛选
message GoodsFilterRequest  {
    int32 priceMin = 1;
    int32 priceMax = 2;
    bool  isHot = 3;
    bool  isNew = 4;
    bool  isTab = 5;
    int32 topCategory = 6;
    int32 pages = 7;
    int32 pagePerNums = 8;
    string keyWords = 9;
    int32 brand = 10;
}

/*
+-------------------------------------------------------+
|   分类品牌关系                                          |
+-------------------------------------------------------+
*/
// 分类品牌关系列表
message CategoryBrandListResponse {
  int32 total = 1;
  repeated CategoryBrandResponse data = 2;
}

// 分类品牌关系详情
message CategoryBrandResponse{
  int32 id = 1;
  BrandInfoResponse brand = 2;
  CategoryInfoResponse category = 3;
}

// 筛选分类品牌关系
message CategoryBrandFilterRequest  {
    int32 pages = 1;
    int32 pagePerNums = 2;
}

// 分类品牌关系
message CategoryBrandRequest{
    int32 id = 1;
    int32 categoryId = 2;
    int32 brandId = 3;
}

/*
+-------------------------------------------------------+
|   美丽的分隔                                            |
+-------------------------------------------------------+
*/
// ？？？
message FilterRequest  {
    int32 pages = 1;
    int32 pagePerNums = 2;
}

// ？？？
message CategoryFilterRequest {
    int32 id = 1;
    bool  isTab = 2;
}

// ？？？
message GoodsReduceRequest {
    int32 GoodsId = 1;
    int32 nums = 2;
}

// ？？？
message BatchCategoryInfoRequest {
    repeated int32 id = 1;
    int32 goodsNums = 2;
    int32 brandNums = 3;
}

// ？？？
message QueryCategoryRequest {
    int32 id = 1;
    string name = 2;
}